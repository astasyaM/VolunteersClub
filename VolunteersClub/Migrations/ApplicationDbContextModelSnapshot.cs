// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VolunteersClub.Data;

#nullable disable

namespace VolunteersClub.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VolunteersClub.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EventTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VolunteersNumber")
                        .HasColumnType("int");

                    b.HasKey("EventID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("VolunteersClub.Models.EventType", b =>
                {
                    b.Property<int>("EventTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EventTypeID");

                    b.ToTable("EventTypes");
                });

            modelBuilder.Entity("VolunteersClub.Models.Leader", b =>
                {
                    b.Property<int>("LeaderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("LeaderID");

                    b.ToTable("Leaders");
                });

            modelBuilder.Entity("VolunteersClub.Models.Mark", b =>
                {
                    b.Property<int>("MarkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActivityRecordID")
                        .HasColumnType("int");

                    b.Property<int>("CurrentMark")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MarkID");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("VolunteersClub.Models.Participant", b =>
                {
                    b.Property<int>("RecordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.Property<bool>("LeaderConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ResponsibilityID")
                        .HasColumnType("int");

                    b.Property<bool>("VolunteerConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("VolunteerID")
                        .HasColumnType("int");

                    b.HasKey("RecordID");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("VolunteersClub.Models.PhoneNumber", b =>
                {
                    b.Property<string>("PhoneMun")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("VolunteerID")
                        .HasColumnType("int");

                    b.HasKey("PhoneMun");

                    b.ToTable("PhoneNumbers");
                });

            modelBuilder.Entity("VolunteersClub.Models.Responsibility", b =>
                {
                    b.Property<int>("ResponsibilityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ResponsibilityName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ResponsibilityID");

                    b.ToTable("Responsibilities");
                });

            modelBuilder.Entity("VolunteersClub.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VolunteersClub.Models.UserType", b =>
                {
                    b.Property<int>("UserTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserTypeID");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("VolunteersClub.Models.Volunteer", b =>
                {
                    b.Property<int>("VolunteerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EventTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("VolunteerStatusID")
                        .HasColumnType("int");

                    b.HasKey("VolunteerID");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("VolunteersClub.Models.VolunteerStatus", b =>
                {
                    b.Property<int>("VolunteerStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("VolunteerStatusName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("VolunteerStatusID");

                    b.ToTable("VolunteerStatuses");
                });
#pragma warning restore 612, 618
        }
    }
}
